complex 복소수 만들때 여기서 a+bi 수학에서는 i를 이용하지만 공학에서는 j사용
변수를 저장할때는 _ , 영문은 사용가능하지만 숫자로 시작되는것과 특수문자는 사용해선 안된다.
(multiline string) = ''' 
ex) hello = '''hello, world!
안녕하세요
python입니다.

>>> print(hello)
실행 
hello, world!
안녕하세요
python입니다.


len함수는 문자열의 길이를 구해줌.
(파이썬 3에서는 문자의개수 2.7에서는 실제 바이트수)

정수를 문자열로 바꾸어서 기존문자열과 합쳐서 출력시키기
ex) 'hello, '+ str(10) 여기서 str은 정수를 문자로변환 or 실수(1.2)를 변환

int(input(문자열)) 괄호안에 있는 값을 정수로 변환하고 문자열, 실수든 상관없이 정수로 변환
float(input(문자열))

문자열 두가지를 분리해서 출력하기
a, b = input('문자열 두개').split()
 split()은 입력받은값을 공백을 기준으로 분리해줌
 문자열
 두개
 
 a,b =intput('실수 두개를 입력: ').split()
 a = float(a)
 b = float(b)
 
 print (a+b)
 
 여기서 split의 값을 float로 변환하기 귀찮다? 혹은 int
 그럼 a,b = map(float,input(dasdsad).split()) 해줌
 print() 공백사이에 띄워쓰려면 , 사용해서 적으면 띄어져서 한줄로 출력됨.
 여기서 1 2 3 이 아니라 1, 2, 3으로 출력시키고 싶다?
 sep을 사용해서 넣어줌 
 ex) print(1, 2, 3, sep=', ')
1, 2, 3 

+ 덧셈 
- 뺄셈
* 곱셈
/ 나눗셈
// 버림 나눗셈 (소수점 이하 버림)
% 나머지
** 거듭제곱
몫과 나머지 함께 구하기 divmod(10,3) --> (3.1)

== 값이 같다
!= 다르다

is 객체가 같다 (실수, 실수)
is not 객체가 다르다.

정수객체와 실수객체가 다른거 확인방법
id(1) // id(1.0)

if조건문에는 = 할당연산자 사용 할 수없음.
파이썬에서는 else if 가 elif

for 반복문으로 range(반복횟수) 사용하기
for 변수 in range(횟수):
    반복할 코드 (들여쓰기 4회)
여기서 range는 증가함수라 (10, 0) 은 실행안됨.
(0, 10) 으로 써야 작동된다.
(10, 0)을 쓰려면 역순을 이용해서 (10, 0, -1) 을 이용해준다.
혹은 print(i, end=' ') 
역순 이용시
for i in reversed(range(10))을 이용하여 역으로 실행가능하다. 
    
error - SyntaxError: invalid syntax: for
반복문 형식을 지키지 않을때 생기는 오류 혹은 ( : ) 클론 확인.
SyntaxError: expected an indented block:for
들여쓰기 제대로 안하면 생기는 오류.

count = int(input('반복할 횟수를 입력하세요: '))
i = 0
while i <count:
	print('Hello, world! %d' %i)
	i += 1
	
import ramdom #랜덤모듈 가져오기

i = 0
while i != 3:
    i = ramdom.randint(0,9)  #randint는 무작위로 정수생성할수있게
    print(i)
    
문자열 조작하기
s = 'Hello,world!'
s.replace('world','python')
'Hello,python!' 출력됨
s.split()은 공백을 기준으로 문자열을 분리해서 리스트만들어줌.
s.plit(',')
s.join('-') 도 구분해줌 ex) apple-banana-grape-orange

s.upper() 모두 대문자
s.lower() 모두 소문자


s.lstrip() 왼쪽공백 삭제
s.rstrip() 우측공백 삭제
s.strip() 양쪽공백삭제
strip에서 공백사이에 문자열형태로 넣어주면 해당문자를 삭제해주기도함.

여기서 s=' ㅇㅁㄴㅇ ' 문자열 저장한 객체임.


파일 경로에서 파일명만 가져오기

path = 'C:\\User\\dojang\\AppData\\Local\\Programs\\python3\\python,exe'
라고 치면
x = path.split('\\')
x.reverse()
filename = x[0]

----------------------------
숫자 더할때 
print_sum (a, b) 여러개의 파라미터 이름 저장가능.
floor division // 버림나눗셈

round 함수 반올림해줌.
ex)print(round(3.1412421, (몇 자리까지?))
문자열 안에 ' 쓰려면 역슬래시
ex) print('i/'m jaeeun')

형 변환 
실수 -> 정수
print(int(3.8) --> 3
정수 -> 실수
print(float(3)) --> 3.0

문자열 -> 정수
print(int("2") + int("5"))
실수도 마찬가지.

정수를 문자열로
print(str(2) + str(5)) --> 25

age = 7
print (" 제 나이는 "+ str(age) + "살입니다.") 

문자열 포맷팅 (방식 3가지)
year=
month=
day=
print("오늘은 {}년 {}월 {}일입니다.".format(year,month,day))
대괄호 안에 0 , 1, 2 순서로 넣으면 순서바뀜.

num_1 = 1
num_2 = 2
print("{0} 나누기 {1}은 {2:2.f}입니다.".format(num_1,num_2, num_1 / num_2))
:2.f 소숫점 둘째자리까지.

c언어 스타일로 바꾸면
name = "김재은"
age = 25
print("제 이름은 %s이고 %d살입니다." % (name ,age))

혹은  (f-string 방식)
print(f:"제 이름은 {name}이고 {age}살입니다.")

scope
